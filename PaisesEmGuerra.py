# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1a0Jugb98cVclnWV_r0hEhX_GFesm8_1v
"""

import networkx as nx

zero = 0
zero = int(zero)
firstline = input()
while (firstline != '0 0'):
  """
  generate and populate the graph
  """
  G = nx.DiGraph() #generating the graph
  nodes,edges = firstline.split()
  nodes = int(nodes) #nodes
  edges = int(edges) #edges
  times = edges
    
  while(times != 0):
      secondline = input()
      source,destination,weights = secondline.split()
      source = int(source) #origin
      destination = int(destination) # destination
      weights = int(weights) # weight of the edge
      G.add_edge(int(source),int(destination),weight=weights)# adding edge
      #if((G.has_edge(source,destination) == True)and(G.has_edge(destination,source) == True)):
      #  G.add_egde(int(source),int(destination),weight = zero)
      #  G.add_egde(int(destination),int(source),weight = zero)
        
      times =  times - 1
    

  trials = input()
  trials= int(trials)
  while(trials != 0):
    thirdline = input()
    n1,n2 = thirdline.split()
    n1 = int(n1)
    n2 = int(n2)
    
    if(G.has_edge(n1,n2) == True):
      print(0)
      
    try:
      result = nx.dijkstra_path_length(G,n1,n2,weight = 'weight')
      if((G.has_edge(n1,n2) == False )and (result != 0)):
        print(result)
      #break 
      
    except:
      print("Nao e possivel entregar a carta")
    
    trials =  trials -1
  firstline = input()